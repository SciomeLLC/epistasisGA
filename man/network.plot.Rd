% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/network.plot.R
\name{network.plot}
\alias{network.plot}
\title{A function to plot a network of snps with potential non-additive multi-snp effects.}
\usage{
network.plot(
  results.df,
  node.shape = "crectangle",
  weight.fun = "max",
  repulse.rad = 1000,
  node.size = 25,
  graph.area = 100,
  vertex.label.cex = 0.5,
  plot = TRUE
)
}
\arguments{
\item{results.df}{The \code{unique.results} data frame of results of GA runs from \code{combine.islands}, with fitness scores restricted to the top results using function \code{network.threshold}.}

\item{node.shape}{The desired node shape. See \code{names(igraph:::.igraph.shapes)} for available shapes.}

\item{weight.fun}{A character string, one of 'mean', 'max', 'sum', or 'logsum'. The default is 'max', but 'logsum' may also be particularly useful. This argument will change the edge weights and node sizes in the graph.}

\item{repulse.rad}{A scalar affecting the graph shape. Decrease to reduce overlapping nodes.}

\item{node.size}{A scalar affecting the size of the graph nodes. Increse to increase size.}

\item{graph.area}{A scalar affecting the size of the graph area. Increase to increase graph area.}

\item{vertex.label.cex}{A scalar controlling the size of the vertex label. Increase to increase size.}

\item{plot}{A logical indicating whether the network should be plotted. If set to false, this function will return an igraph object which can be used for manual plotting.}
}
\value{
An igraph object, if \code{plot} is set to FALSE.
}
\description{
This function plots a network of snps with potential non-additive multi-snp effects.
}
\examples{

data(case)
data(dad)
data(mom)
library(Matrix)
chrom.mat <- as.matrix(bdiag(list(matrix(rep(TRUE, 25^2), nrow = 25),
                              matrix(rep(TRUE, 25^2), nrow = 25),
                              matrix(rep(TRUE, 25^2), nrow = 25),
                              matrix(rep(TRUE, 25^2), nrow = 25))))

pp.list <- preprocess.genetic.data(case[, 1:10], father.genetic.data = dad[ , 1:10],
                               mother.genetic.data = mom[ , 1:10],
                               chrom.mat = chrom.mat[ , 1:10])

run.ga(pp.list, n.chromosomes = 4, chromosome.size = 3, results.dir = 'tmp',
       cluster.type = 'interactive', registryargs = list(file.dir = 'tmp_reg', seed = 1500),
       generations = 2, n.islands = 2, island.cluster.size = 1, n.top.chroms = 3)

combined.res <- combine.islands('tmp')

set.seed(10)
network.plot(combined.res$unique.results)

unlink('tmp', recursive = TRUE)
unlink('tmp_reg', recursive = TRUE)

}

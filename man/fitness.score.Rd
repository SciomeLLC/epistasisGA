% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fitness.score.R
\name{fitness.score}
\alias{fitness.score}
\title{A function to generate a fitness score for a subset of snps from a dataset of case genetic markers}
\usage{
fitness.score(
  case.genetic.data,
  complement.genetic.data,
  target.snps,
  dist.type,
  parent.af = NULL,
  k = 10,
  correct.thresh = 0.9
)
}
\arguments{
\item{case.genetic.data}{A genetic dataset from cases (for a dichotomous trait). Columns are snps, and rows are individuals.}

\item{complement.genetic.data}{A genetic dataset representing the genetic complements to the cases (for a dichotomous trait). That is, these data correspond to the hypothetical pseudo sibling who inherited the parental alleles not transmitted to the case. Columns are snps, and rows are individuals.}

\item{target.snps}{A numeric vector of the columns corresponding to the snps for which the fitness score will be computed.}

\item{dist.type}{A character string indicating the type of distance measurement. Type 'knn' performs k-nearest neighbors classifications, type 'paired' performs paired length classifications.}

\item{parent.af}{A numeric vector of the allele frequencies of all snps in the parent population. This must be supplied only if dist.type = 'paired'.}

\item{k}{A numeric scalar corresponding to the number of nearest neighbors required for computing the fitness score. See details for more information.}

\item{correct.thresh}{A numeric scalar between 0 and 1 indicating the minimum proportion of of cases among the nearest neighbors for a given individual for that individual to be considered correctly classified. See details for more information.}
}
\value{
A scalar, the fitness score for the given set of snps.
}
\description{
This function takes a subset of snps from an input genetic dataset and returns a fitness score using a k-nearest neighbors approach.
}
\examples{

data(case.sim1)
data(comp.sim1)
fitness.score(case.sim1, comp.sim1, target.snps = c(1, 4, 7), dist.type = "knn")

}

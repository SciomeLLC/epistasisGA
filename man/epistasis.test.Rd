% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/epistasis.test.R
\name{epistasis.test}
\alias{epistasis.test}
\title{A function to run a test of the null hypothesis that a collection of SNPs do not exhibit epistasis, conditional
upon observed marginal SNP-disease associations.}
\usage{
epistasis.test(
  snp.cols,
  preprocessed.list,
  n.permutes = 1000,
  n.different.snps.weight = 2,
  n.both.one.weight = 1,
  weight.function.int = 2,
  recode.threshold = 3,
  bp.param = bpparam()
)
}
\arguments{
\item{snp.cols}{An integer vector specifying the columns in the input data containing the SNPs to be tested.}

\item{preprocessed.list}{The initial list produced by function \code{preprocess.genetic.data}.}

\item{n.permutes}{The number of permutations on which to base the test. Defaults to 1000.}

\item{n.different.snps.weight}{The number by which the number of different SNPs between a case and complement/unaffected sibling
is multiplied in computing the family weights. Defaults to 2.}

\item{n.both.one.weight}{The number by which the number of SNPs equal to 1 in both the case and complement/unaffected sibling
is multiplied in computing the family weights. Defaults to 1.}

\item{weight.function.int}{An integer used to assign family weights. Specifically, we use \code{weight.function.int} in a function that takes the weighted sum
of the number of different SNPs and SNPs both equal to one as an argument, denoted as x, and
returns a family weight equal to \code{weight.function.int}^x. Defaults to 2.}

\item{recode.threshold}{For a given SNP, the minimum test statistic required to recode and recompute the fitness score using recessive coding. Defaults to 3.
See the GADGETS paper for specific details.}

\item{bp.param}{The BPPARAM argument to be passed to bplapply when estimating marginal disease associations for each SNP.
If using a cluster computer, this parameter needs to be set with care. See \code{BiocParallel::bplapply} for more details}
}
\value{
A list of thee elements:
\describe{
 \item{pval}{The p-value of the test.}
 \item{obs.fitness.score}{The fitness score from the observed data}
 \item{perm.fitness.scores}{A vector of fitness scores for the permuted datasets.}
}
}
\description{
This function runs a permutation based test of the null hypothesis that a collection of SNPs do not exhibit epistasis,
conditional upon observed marginal SNP-disease associations.
}
\examples{

data(case)
data(dad)
data(mom)
data(snp.annotations)
library(Matrix)
block.ld.mat <- as.matrix(bdiag(list(matrix(rep(TRUE, 25^2), nrow = 25),
                              matrix(rep(TRUE, 25^2), nrow = 25),
                              matrix(rep(TRUE, 25^2), nrow = 25),
                              matrix(rep(TRUE, 25^2), nrow = 25))))

pp.list <- preprocess.genetic.data(case, father.genetic.data = dad,
                               mother.genetic.data = mom,
                               block.ld.mat = block.ld.mat)

run.gadgets(pp.list, n.chromosomes = 5, chromosome.size = 3,
       results.dir = "tmp", cluster.type = "interactive",
       registryargs = list(file.dir = "tmp_reg", seed = 1300),
       n.top.chroms = 5, n.islands = 8, island.cluster.size = 4,
       n.migrations = 2)

combined.res <- combine.islands('tmp', snp.annotations, pp.list)

top.snps <- as.vector(t(combined.res[1, 1:3]))
set.seed(10)
epi.test.res <- epistasis.test(top.snps, pp.list)

unlink('tmp', recursive = TRUE)
unlink('tmp_reg', recursive = TRUE)

}
